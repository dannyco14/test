{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vaults_assessmentkeyvault1_name": {
      "defaultValue": "assessmentkeyvaultd",
      "type": "String"
    },
    "virtualNetworks_assessmentvn_name": {
      "defaultValue": "assessmentvnd",
      "type": "String"
    },
    "sites_SimpleUpload20191125111810_name": {
      "defaultValue": "SimpleUploaddaniel",
      "type": "String"
    },
    "storageAccounts_assessmentstorageacc_name": {
      "defaultValue": "assessmentstorageaccd",
      "type": "String"
    },
    "storageAccounts_assessmentdatalakegen2_name": {
      "defaultValue": "assessmentdatalakegen2d",
      "type": "String"
    },
    "serverfarms_SimpleUpload20191125111810Plan_name": {
      "defaultValue": "SimpleUpload_Plan",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[parameters('vaults_assessmentkeyvault1_name')]",
      "location": "westeurope",
      "tags": {
        "Environment": "Production"
      },
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "0d01c0c0-36b8-4aa8-a248-ef528998b7bf",
        "accessPolicies": [
          {
            "tenantId": "0d01c0c0-36b8-4aa8-a248-ef528998b7bf",
            "objectId": "3805786f-b9a5-4523-af13-2f541c80f445",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers",
                "Purge"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-09-01",
      "name": "[parameters('virtualNetworks_assessmentvn_name')]",
      "location": "westeurope",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "10.0.1.128/28",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "frontend",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "backend",
            "properties": {
              "addressPrefix": "10.0.1.0/25",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccounts_assessmentdatalakegen2_name')]",
      "location": "westeurope",
      "tags": {
        "Environment": "Production"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_assessmentdatalakegen2_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_assessmentdatalakegen2_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccounts_assessmentstorageacc_name')]",
      "location": "westeurope",
      "tags": {
        "Environment": "Production"
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('serverfarms_SimpleUpload20191125111810Plan_name')]",
      "location": "West Europe",
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(parameters('vaults_assessmentkeyvault1_name'), '/storageconnectionstring')]",
      "location": "westeurope",
      "tags": {
        "Environment": "Production"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_assessmentkeyvault1_name'))]"
      ],
      "properties": {
        "value": "",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('virtualNetworks_assessmentvn_name'), '/backend')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_assessmentvn_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.1.0/25",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('virtualNetworks_assessmentvn_name'), '/frontend')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_assessmentvn_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('virtualNetworks_assessmentvn_name'), '/GatewaySubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_assessmentvn_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.1.128/28",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_assessmentstorageacc_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_assessmentstorageacc_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('sites_SimpleUpload20191125111810_name')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_SimpleUpload20191125111810Plan_name'))]"
      ],
      "tags": {
        "hidden-related:/subscriptions/41f7ca1d-8e75-4af7-83ca-927f92162b7e/resourceGroups/assessment_daniel_1/providers/Microsoft.Web/serverfarms/SimpleUpload20191125111810Plan": "empty"
      },
      "kind": "app",
      "identity": {
        "principalId": "",
        "tenantId": "",
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "simpleupload20191125111810.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "simpleupload20191125111810.scm.azurewebsites.net",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_SimpleUpload20191125111810Plan_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_SimpleUpload20191125111810_name'), '/web')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_SimpleUpload20191125111810_name'))]"
      ],
      "tags": {
        "hidden-related:/subscriptions/41f7ca1d-8e75-4af7-83ca-927f92162b7e/resourceGroups/assessment_daniel_1/providers/Microsoft.Web/serverfarms/SimpleUpload20191125111810Plan": "empty"
      },
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$SimpleUpload20191125111810",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "",
        "siteAuthEnabled": false,
        "siteAuthSettings": {
          "enabled": null,
          "unauthenticatedClientAction": null,
          "tokenStoreEnabled": null,
          "allowedExternalRedirectUrls": null,
          "defaultProvider": null,
          "clientId": null,
          "clientSecret": null,
          "clientSecretCertificateThumbprint": null,
          "issuer": null,
          "allowedAudiences": null,
          "additionalLoginParams": null,
          "isAadAutoProvisioned": false,
          "googleClientId": null,
          "googleClientSecret": null,
          "googleOAuthScopes": null,
          "facebookAppId": null,
          "facebookAppSecret": null,
          "facebookOAuthScopes": null,
          "twitterConsumerKey": null,
          "twitterConsumerSecret": null,
          "microsoftAccountClientId": null,
          "microsoftAccountClientSecret": null,
          "microsoftAccountOAuthScopes": null
        },
        "localMySqlEnabled": false,
        "managedServiceIdentityId": 8014,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0,
        "fileChangeAuditEnabled": false,
        "functionsRuntimeScaleMonitoringEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_SimpleUpload20191125111810_name'), '/', parameters('sites_SimpleUpload20191125111810_name'), '.azurewebsites.net')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_SimpleUpload20191125111810_name'))]"
      ],
      "properties": {
        "siteName": "SimpleUpload20191125111810",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/siteextensions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('sites_SimpleUpload20191125111810_name'), '/Microsoft.AspNetCore.AzureAppServices.SiteExtension')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_SimpleUpload20191125111810_name'))]"
      ],
      "properties": {
        "id": "Microsoft.AspNetCore.AzureAppServices.SiteExtension",
        "title": "ASP.NET Core Logging Integration",
        "type": "Gallery",
        "description": "This site extension enables logging integration for ASP.NET Core applications on Azure App Service.\n\nThis package was built from the source code at https://github.com/aspnet/AspNetCore/tree/80fec4e3edea3972e95885f5c0db6ee06072f917",
        "version": "3.1.0-preview3-19555-2",
        "project_url": "https://asp.net/",
        "icon_url": "https://www.siteextensions.net/Content/Images/packageDefaultIcon-50x50.png",
        "license_url": "https://licenses.nuget.org/Apache-2.0",
        "authors": [
          "Microsoft"
        ],
        "download_count": 0,
        "local_is_latest_version": true,
        "local_path": "D:\\home\\SiteExtensions\\Microsoft.AspNetCore.AzureAppServices.SiteExtension",
        "installed_date_time": "2019-11-25T22:47:13+00:00",
        "provisioningState": "Succeeded"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_assessmentstorageacc_name'), '/default/uploadblob0359b62d-c9f7-48e5-a7fc-53993365ffe1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_assessmentstorageacc_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_assessmentstorageacc_name'))]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_assessmentstorageacc_name'), '/default/uploadblob81d701a0-6d85-47e0-a816-5a294b1e7dd3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_assessmentstorageacc_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_assessmentstorageacc_name'))]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    }
  ]
}